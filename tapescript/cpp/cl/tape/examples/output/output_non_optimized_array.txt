Plus operation:

Input vector: { 1, 2, 0, 1 }
Output vector: { 1, 3 }

Forward(1, dx) sweep for dx = { 2, 5, 1, -1 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = 1                    fz[1] = 2                   
2    2    Init                        fz[0] = 2                    fz[1] = 5                   
3    3    Init                        fz[0] = 0                    fz[1] = 1                   
4    4    Init                        fz[0] = 1                    fz[1] = -1                  
5    5    +        vl=1     vr=3      fz[0] = 1                    fz[1] = 3                   
6    6    +        vl=2     vr=4      fz[0] = 3                    fz[1] = 4                   
7         End                        

Forward sweep result: { 3, 4 }

Reverse(1, w) sweep for w = { 3, 7 }...
Reverse sweep result: { 3, 7, 3, 7 }


Minus operation:

Input vector: { 1, 2, 0, 1 }
Output vector: { 1, 1 }

Forward(1, dx) sweep for dx = { 2, 5, 1, -1 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = 1                    fz[1] = 2                   
2    2    Init                        fz[0] = 2                    fz[1] = 5                   
3    3    Init                        fz[0] = 0                    fz[1] = 1                   
4    4    Init                        fz[0] = 1                    fz[1] = -1                  
5    5    -        vl=1     vr=3      fz[0] = 1                    fz[1] = 1                   
6    6    -        vl=2     vr=4      fz[0] = 1                    fz[1] = 6                   
7         End                        

Forward sweep result: { 1, 6 }

Reverse(1, w) sweep for w = { 3, 7 }...
Reverse sweep result: { 3, 7, -3, -7 }


Exponent function:

Input vector: { 0, 1 }
Output vector: { 1, 2.72 }

Initial Forward(0) sweep...

Forward(1, dx) sweep for dx = { 2, -1 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = 0                    fz[1] = 2                   
2    2    Init                        fz[0] = 1                    fz[1] = -1                  
3    3    exp       v=1               fz[0] = 1                    fz[1] = 2                   
4    4    exp       v=2               fz[0] = 2.72                 fz[1] = -2.72               
5         End                        

Forward sweep result: { 2, -2.72 }

Reverse(1, w) sweep for w = { 1, -1 }...
Reverse sweep result: { 1, -2.72 }


Cosine function:

Input vector: { 1, 1.57 }
Output vector: { 0.54, -1.03e-013 }

Initial Forward(0) sweep...

Forward(1, dx) sweep for dx = { 1, 1 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = 1                    fz[1] = 1                   
2    2    Init                        fz[0] = 1.57                 fz[1] = 1                   
3    4    cos       v=1               fz[0] = 0.54                 fz[1] = -0.841              
4    6    cos       v=2               fz[0] = -1.03e-013           fz[1] = -1                  
5         End                        

Forward sweep result: { -0.841, -1 }

Reverse(1, w) sweep for w = { -2, 1 }...
Reverse sweep result: { 1.68, -1 }


Discount calculations:

Spot: { 100, 110 }
Rate: { 0.05, 0.04 }
Time: { 1, 2 }
Input vector: { 100, 110, 0.05, 0.04, 1, 2 }
Discounted price: { 95.1, 102 }
Discount factor: { 0.951, 0.923 }
Output vector: { 95.1, 102, 0.951, 0.923 }

Initial Forward(0) sweep...

Calculation of sensitivity to 1% change in interest rate.
Forward(1, dx) sweep for dx = { 0, 0, 0.01, 0.01, 0, 0 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = 100                  fz[1] = 0                   
2    2    Init                        fz[0] = 110                  fz[1] = 0                   
3    3    Init                        fz[0] = 0.05                 fz[1] = 0.01                
4    4    Init                        fz[0] = 0.04                 fz[1] = 0.01                
5    5    Init                        fz[0] = 1                    fz[1] = 0                   
6    6    Init                        fz[0] = 2                    fz[1] = 0                   
7    7    -        pl=0     vr=3      fz[0] = -0.05                fz[1] = -0.01               
8    8    *        vl=7     vr=5      fz[0] = -0.05                fz[1] = -0.01               
9    9    exp       v=8               fz[0] = 0.951                fz[1] = -0.00951            
10   10   -        pl=0     vr=4      fz[0] = -0.04                fz[1] = -0.01               
11   11   *        vl=10    vr=6      fz[0] = -0.08                fz[1] = -0.02               
12   12   exp       v=11              fz[0] = 0.923                fz[1] = -0.0185             
13   13   *        vl=1     vr=9      fz[0] = 95.1                 fz[1] = -0.951              
14   14   *        vl=2     vr=12     fz[0] = 102                  fz[1] = -2.03               
15        End                        

Forward sweep result: { -0.951, -2.03, -0.00951, -0.0185 }
Sensitivity of discounted price: -0.951 , -2.03
Sensitivity of discount factor:  -0.00951 , -0.0185

Calculation of sensitivity of discount factor.
Reverse(1, w) sweep for w = { 0, 0, 1, 1 }...
Reverse sweep result: { 0, 0, -0.951, -1.85, -0.0476, -0.0369 }
Sensitivity to the changes in spot price:    0 , 0
Sensitivity to the changes in interest rate: -0.951 , -1.85
Sensitivity to the changes in maturity time: -0.0476 , -0.0369


We are mixing arrays and scalars in calculations of
Y = { sin(x0) / cos(x1) + x1 / x0, y0 + x0 * x1^3 - 0.5 } function:

Input vector: { 1, 2, -1.2 }
Output vector: { 1.12, 1.91, -1.11, -2.05 }

Initial Forward(0) sweep...

Forward(1, dx) sweep for dx = { 1, -1, 2 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = 1                    fz[1] = 1                   
2    2    Init                        fz[0] = 2                    fz[1] = -1                  
3    3    Init                        fz[0] = -1.2                 fz[1] = 2                   
4    4    /        vl=3     vr=1      fz[0] = -1.2                 fz[1] = 3.2                 
5    6    cos       v=3               fz[0] = 0.362                fz[1] = 1.86                
6    8    sin       v=1               fz[0] = 0.841                fz[1] = 0.54                
7    9    /        vl=8     vr=6      fz[0] = 2.32                 fz[1] = -10.5               
8    10   +        vl=9     vr=4      fz[0] = 1.12                 fz[1] = -7.26               
9    11   /        vl=3     vr=2      fz[0] = -0.6                 fz[1] = 0.7                 
10   13   cos       v=3               fz[0] = 0.362                fz[1] = 1.86                
11   15   sin       v=2               fz[0] = 0.909                fz[1] = 0.416               
12   16   /        vl=15    vr=13     fz[0] = 2.51                 fz[1] = -11.8               
13   17   +        vl=16    vr=11     fz[0] = 1.91                 fz[1] = -11.1               
14   18   *        vl=3     vr=3      fz[0] = 1.44                 fz[1] = -4.8                
15   19   *        vl=3     vr=18     fz[0] = -1.73                fz[1] = 8.64                
16   20   *        vl=1     vr=19     fz[0] = -1.73                fz[1] = 6.91                
17   21   +        vl=10    vr=20     fz[0] = -0.606               fz[1] = -0.343              
18   22   -        vl=21    pr=0.5    fz[0] = -1.11                fz[1] = -0.343              
19   23   *        vl=3     vr=3      fz[0] = 1.44                 fz[1] = -4.8                
20   24   *        vl=3     vr=23     fz[0] = -1.73                fz[1] = 8.64                
21   25   *        vl=2     vr=24     fz[0] = -3.46                fz[1] = 19                  
22   26   +        vl=17    vr=25     fz[0] = -1.55                fz[1] = 7.95                
23   27   -        vl=26    pr=0.5    fz[0] = -2.05                fz[1] = 7.95                
24        End                        

Forward sweep result: { -7.26, -11.1, -0.343, 7.95 }

Reverse(1, w) sweep for w = { -2, 1, 2, 3 }...
Reverse sweep result: { -3.46, -8.58, 10.7 }


Sum of an array:

Input vector: { 1, 2 }
Output vector: { 3 }

Initial Forward(0) sweep...

Forward(1, dx) sweep for dx = { 1.5, -1 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = 1                    fz[1] = 1.5                 
2    2    Init                        fz[0] = 2                    fz[1] = -1                  
3    3    +        vl=1     vr=2      fz[0] = 3                    fz[1] = 0.5                 
4         End                        

Forward sweep result: { 0.5 }

Reverse(1, w) sweep for w = { 4 }...
Reverse sweep result: { 4, 4 }


Reversing of an array:

Input vector: { 1, 2 }
Output vector: { 2, 1 }

Initial Forward(0) sweep...

Forward(1, dx) sweep for dx = { 1.5, -1 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = 1                    fz[1] = 1.5                 
2    2    Init                        fz[0] = 2                    fz[1] = -1                  
3         End                        

Forward sweep result: { -1, 1.5 }

Reverse(1, w) sweep for w = { 4, 4 }...
Reverse sweep result: { 4, 4 }


Array concatenation:

Input vector: { 1, 2, 7, 0, 5 }
Output vector: { 1, 2, 7, 0, 5 }

Initial Forward(0) sweep...

Forward(1, dx) sweep for dx = { 2, 5, 12, 1, -1 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = 1                    fz[1] = 2                   
2    2    Init                        fz[0] = 2                    fz[1] = 5                   
3    3    Init                        fz[0] = 7                    fz[1] = 12                  
4    4    Init                        fz[0] = 0                    fz[1] = 1                   
5    5    Init                        fz[0] = 5                    fz[1] = -1                  
6         End                        

Forward sweep result: { 2, 5, 12, 1, -1 }

Reverse(1, w) sweep for w = { 1, 2, 3, 4, 5 }...
Reverse sweep result: { 1, 2, 3, 4, 5 }


Array construction from scalar:

Input vector: { 7 }
Output vector: { 7, 7 }

Initial Forward(0) sweep...

Forward(1, dx) sweep for dx = { 1 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = 7                    fz[1] = 1                   
2         End                        

Forward sweep result: { 1, 1 }

Reverse(1, w) sweep for w = { 1, 2 }...
Reverse sweep result: { 3 }


Maximum of two arrays:

Input vector: { -1, 0, 1, 1, 0, -1 }
Output vector: { 1, 0, 1 }

Initial Forward(0) sweep...

Forward(1, dx) sweep for dx = { 1, 1, 1, 2, 2, 2 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = -1                   fz[1] = 1                   
2    2    Init                        fz[0] = 0                    fz[1] = 1                   
3    3    Init                        fz[0] = 1                    fz[1] = 1                   
4    4    Init                        fz[0] = 1                    fz[1] = 2                   
5    5    Init                        fz[0] = 0                    fz[1] = 2                   
6    6    Init                        fz[0] = -1                   fz[1] = 2                   
7    7    > ? :    vl=1     vr=4     vt=1     vf=4     fz[0] = 1                    fz[1] = 2                   
8    8    > ? :    vl=2     vr=5     vt=2     vf=5     fz[0] = 0                    fz[1] = 2                   
9    9    > ? :    vl=3     vr=6     vt=3     vf=6     fz[0] = 1                    fz[1] = 1                   
10        End                        

Forward sweep result: { 2, 2, 1 }

Reverse(1, w) sweep for w = { 1, 2, 3 }...
Reverse sweep result: { 0, 0, 3, 1, 2, 0 }


L2 norm of an array:

Input vector: { 3 }
Output vector: { 4.24 }

Initial Forward(0) sweep...

Forward(1, dx) sweep for dx = { 1 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = 3                    fz[1] = 1                   
2    2    *        vl=1     vr=1      fz[0] = 9                    fz[1] = 6                   
3    3    *        vl=1     vr=1      fz[0] = 9                    fz[1] = 6                   
4    4    +        vl=3     vr=2      fz[0] = 18                   fz[1] = 12                  
5    5    sqrt      v=4               fz[0] = 4.24                 fz[1] = 1.41                
6         End                        

Forward sweep result: { 1.41 }

Reverse(1, w) sweep for w = { 1 }...
Reverse sweep result: { 1.41 }


Linear regression:

Input vector: { -1, 0, 1, 1, 0, 3 }
Output vector: { 1.33, 1, 0.333, 1.33, 2.33 }

Initial Forward(0) sweep...

Forward(1, dx) sweep for dx = { 0, 0, 0, 0, 0, 1 }...

Op#  Res# Op       Operands#          Taylor coefficients
1    1    Init                        fz[0] = -1                   fz[1] = 0                   
2    2    Init                        fz[0] = 0                    fz[1] = 0                   
3    3    Init                        fz[0] = 1                    fz[1] = 0                   
4    4    Init                        fz[0] = 1                    fz[1] = 0                   
5    5    Init                        fz[0] = 0                    fz[1] = 0                   
6    6    Init                        fz[0] = 3                    fz[1] = 1                   
7    7    +        vl=1     vr=2      fz[0] = -1                   fz[1] = 0                   
8    8    +        vl=7     vr=3      fz[0] = 0                    fz[1] = 0                   
9    9    *        pl=0.33* vr=8      fz[0] = 0                    fz[1] = 0                   
10   10   +        vl=4     vr=5      fz[0] = 1                    fz[1] = 0                   
11   11   +        vl=10    vr=6      fz[0] = 4                    fz[1] = 1                   
12   12   *        pl=0.33* vr=11     fz[0] = 1.33                 fz[1] = 0.333               
13   13   -        vl=3     vr=9      fz[0] = 1                    fz[1] = 0                   
14   14   *        vl=13    vr=13     fz[0] = 1                    fz[1] = 0                   
15   15   -        vl=2     vr=9      fz[0] = 0                    fz[1] = 0                   
16   16   *        vl=15    vr=15     fz[0] = 0                    fz[1] = 0                   
17   17   -        vl=1     vr=9      fz[0] = -1                   fz[1] = 0                   
18   18   *        vl=17    vr=17     fz[0] = 1                    fz[1] = 0                   
19   19   +        vl=18    vr=16     fz[0] = 1                    fz[1] = 0                   
20   20   +        vl=19    vr=14     fz[0] = 2                    fz[1] = 0                   
21   21   -        vl=6     vr=12     fz[0] = 1.67                 fz[1] = 0.667               
22   22   -        vl=3     vr=9      fz[0] = 1                    fz[1] = 0                   
23   23   *        vl=22    vr=21     fz[0] = 1.67                 fz[1] = 0.667               
24   24   -        vl=5     vr=12     fz[0] = -1.33                fz[1] = -0.333              
25   25   -        vl=2     vr=9      fz[0] = 0                    fz[1] = 0                   
26   26   *        vl=25    vr=24     fz[0] = -0                   fz[1] = 0                   
27   27   -        vl=4     vr=12     fz[0] = -0.333               fz[1] = -0.333              
28   28   -        vl=1     vr=9      fz[0] = -1                   fz[1] = 0                   
29   29   *        vl=28    vr=27     fz[0] = 0.333                fz[1] = 0.333               
30   30   +        vl=29    vr=26     fz[0] = 0.333                fz[1] = 0.333               
31   31   +        vl=30    vr=23     fz[0] = 2                    fz[1] = 1                   
32   32   /        vl=31    vr=20     fz[0] = 1                    fz[1] = 0.5                 
33   33   *        vl=32    vr=9      fz[0] = 0                    fz[1] = 0                   
34   34   -        vl=12    vr=33     fz[0] = 1.33                 fz[1] = 0.333               
35   35   *        vl=32    vr=1      fz[0] = -1                   fz[1] = -0.5                
36   36   +        vl=34    vr=35     fz[0] = 0.333                fz[1] = -0.167              
37   37   *        vl=32    vr=2      fz[0] = 0                    fz[1] = 0                   
38   38   +        vl=34    vr=37     fz[0] = 1.33                 fz[1] = 0.333               
39   39   *        vl=32    vr=3      fz[0] = 1                    fz[1] = 0.5                 
40   40   +        vl=34    vr=39     fz[0] = 2.33                 fz[1] = 0.833               
41        End                        

Forward sweep result: { 0.333, 0.5, -0.167, 0.333, 0.833 }

